{"ast":null,"code":"var _jsxFileName = \"/Users/rbudhiraja/Desktop/personal/projects/neumorphism-generator/src/components/common/ColourPicker.js\";\nimport React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport styled from 'styled-components';\nimport { Flex } from '../../styling/styled';\nimport Color from 'color';\nconst ColorBox = styled.div`\n    border: 2px solid #00334e;\n    border-radius: 4px;\n    height: 25px;\n    cursor: pointer;\n    margin: 10px;\n    width: 25px;\n`;\nconst Popover = styled.div`\n    position: absolute;\n    top: 27px;\n    right: 20px;\n    z-index: 2;\n`;\nconst Cover = styled.div`\n    position: fixed;\n    top: 0px;\n    right: 0px;\n    bottom: 0px;\n    left: 0px;\n  `;\nexport default (({\n  backgroundColor,\n  setBackgroundColor,\n  intensity,\n  setLightColour,\n  setDarkColor\n}) => {\n  const [isColorPickerVisible, setColorPickerVisibility] = useState(false);\n  return /*#__PURE__*/React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Pick a Colour :\"), /*#__PURE__*/React.createElement(ColorBox, {\n    onClick: () => setColorPickerVisibility(!isColorPickerVisible),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), isColorPickerVisible ? /*#__PURE__*/React.createElement(Popover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Cover, {\n    onClick: () => setColorPickerVisibility(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ChromePicker, {\n    color: backgroundColor,\n    onChangeComplete: color => {\n      setBackgroundColor(`${color.hex}`);\n      setLightColour(Color(color.hex).lighten(intensity));\n      setDarkColor(Color(color.hex).darken(intensity));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  })) : null);\n});","map":{"version":3,"sources":["/Users/rbudhiraja/Desktop/personal/projects/neumorphism-generator/src/components/common/ColourPicker.js"],"names":["React","useState","ChromePicker","styled","Flex","Color","ColorBox","div","Popover","Cover","backgroundColor","setBackgroundColor","intensity","setLightColour","setDarkColor","isColorPickerVisible","setColorPickerVisibility","color","hex","lighten","darken"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGH,MAAM,CAACI,GAAI;;;;;;;CAA5B;AAQA,MAAMC,OAAO,GAAGL,MAAM,CAACI,GAAI;;;;;CAA3B;AAOE,MAAME,KAAK,GAAGN,MAAM,CAACI,GAAI;;;;;;GAAzB;AAQF,gBAAe,CAAC;AACZG,EAAAA,eADY;AAEZC,EAAAA,kBAFY;AAGZC,EAAAA,SAHY;AAIZC,EAAAA,cAJY;AAKZC,EAAAA;AALY,CAAD,KAMT;AACF,QAAM,CAACC,oBAAD,EAAuBC,wBAAvB,IAAmDf,QAAQ,CAAC,KAAD,CAAjE;AAEA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAMe,wBAAwB,CAAC,CAACD,oBAAF,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAIQA,oBAAoB,gBAChB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAG,MAAMC,wBAAwB,CAAC,KAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,YAAD;AACA,IAAA,KAAK,EAAGN,eADR;AAEA,IAAA,gBAAgB,EAAIO,KAAD,IAAU;AACzBN,MAAAA,kBAAkB,CAAE,GAAEM,KAAK,CAACC,GAAI,EAAd,CAAlB;AACAL,MAAAA,cAAc,CAACR,KAAK,CAACY,KAAK,CAACC,GAAP,CAAL,CAAiBC,OAAjB,CAAyBP,SAAzB,CAAD,CAAd;AACAE,MAAAA,YAAY,CAACT,KAAK,CAACY,KAAK,CAACC,GAAP,CAAL,CAAiBE,MAAjB,CAAwBR,SAAxB,CAAD,CAAZ;AACH,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADgB,GAahB,IAjBZ,CADJ;AAsBH,CA/BD","sourcesContent":["import React, {useState} from 'react'\nimport { ChromePicker } from 'react-color';\nimport styled from 'styled-components'\nimport { Flex } from '../../styling/styled' \nimport Color from 'color'\n\nconst ColorBox = styled.div`\n    border: 2px solid #00334e;\n    border-radius: 4px;\n    height: 25px;\n    cursor: pointer;\n    margin: 10px;\n    width: 25px;\n`\nconst Popover = styled.div`\n    position: absolute;\n    top: 27px;\n    right: 20px;\n    z-index: 2;\n`\n\n  const Cover = styled.div`\n    position: fixed;\n    top: 0px;\n    right: 0px;\n    bottom: 0px;\n    left: 0px;\n  `\n\nexport default ({\n    backgroundColor,\n    setBackgroundColor,\n    intensity,\n    setLightColour,\n    setDarkColor\n}) => {\n    const [isColorPickerVisible, setColorPickerVisibility] = useState(false);\n\n    return (\n        <Flex>\n            <p>Pick a Colour :</p>\n            <ColorBox onClick={() => setColorPickerVisibility(!isColorPickerVisible)}/>\n            {\n                isColorPickerVisible ? (\n                    <Popover>\n                        <Cover onClick={ () => setColorPickerVisibility(false) }/>\n                        <ChromePicker\n                        color={ backgroundColor }\n                        onChangeComplete={ (color) =>{\n                            setBackgroundColor(`${color.hex}`);\n                            setLightColour(Color(color.hex).lighten(intensity));\n                            setDarkColor(Color(color.hex).darken(intensity));\n                        }}\n                    />\n                    </Popover>\n                    \n                ) : null\n            }\n        </Flex>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}